runs:
  using: "Composite"
  steps:
    - uses: docker/setup-buildx-action@v3.0.0
    - name: install qemu
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static
      shell: bash

    - name: Cache Docker layers
      uses: actions/cache@v4.0.0
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-ARM64-${{ env.date }}

    - name: docker build
      run: |
        docker buildx build \
            --load \
            --file Dockerfile.arm64 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            --tag ${{ env.TAG }}:arm64 . \
          || exit 0
        if [[ $(docker images | grep -c ${{ env.TAG }}) -eq 0 ]]; then
          docker buildx build \
            --load \
            --file Dockerfile.arm64 \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            --no-cache --pull \
            --tag ${{ env.TAG }}:arm64 .
        fi
        docker images
      shell: bash

    - name: latex build test
      run: |
        make test ARCH=arm64 | tee result.log || true
        if [[ $(cat result.log | grep -c FAILED) -ne 0 ]]; then
          make test ARCH=arm64 --trace
        fi
      shell: bash

    - name: automatic selection of texfile
      run: |
        rm -f sample/semi-sample/*.pdf
        cp -rf sample/semi-sample/ temp
        make run ARCH=arm64 || true
        make docker-stop || true
        if [ $(cat temp/semi.log | grep -c "No pages of output") -ne 0 ]; then
          cat temp/semi.log
          exit 1
        fi
      shell: bash

    - name: lint
      run: |
        make lint ARCH=arm64 | tee lint.txt || true
        cat lint.txt
        if [[ $(cat lint.txt | grep -c "error") -lt 1 ]]; then
          cat lint.txt | grep -c "error"
          cat lint.txt
          exit 1
        fi
      shell: bash
