name: LaTeX Test

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  TAG: latex-container

jobs:
  LatexBuild:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: docker build
        run: |
          docker buildx build --build-arg TS=${{ github.sha }} --load \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            --tag ${{ env.TAG }} . \
          || exit 0
          if [[ $(docker images | grep -c ${{ env.TAG }}) -eq 0 ]]; then
            docker buildx build --build-arg TS=${{ github.sha }} --load \
              --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
              --no-cache --pull \
              --tag ${{ env.TAG }} .
          fi
          docker images

      - name: latex build sample
        run: |
          rm -f sample/*.pdf
          make run-sample
          make docker-stop
          if [ $(ls sample/ | grep -c .pdf) -eq 0 ]; then
            exit 1
          fi

      - name: latex build
        run: |
          rm -f sample/*.pdf
          make run
          make docker-stop
          if [ $(ls sample/ | grep -c .pdf) -eq 0 ]; then
            exit 1
          fi

      - name: deep path
        run: |
          mkdir -p deepdir/L1/L2/L3
          cp -r sample/* deepdir/L1/L2/L3/
          make run
          make docker-stop
          if [ $(ls deepdir/L1/L2/L3 | grep -c .pdf) -eq 0 ]; then
            exit 1
          fi

      - name: lint
        run: |
          make github_actions_lint_
          ls
          lint_cnt=$(cat lint.log | grep -c "error")
          if [ ${lint_cnt} -lt 1 ]; then
            exit 1
          fi
